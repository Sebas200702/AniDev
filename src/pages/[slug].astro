---
import Layout from '@layouts/base.astro'
import AnimeTag from '@components/anime-tag.astro'
import type { Anime } from '../types'
import { baseUrl, getAnimeType, reduceSynopsis } from '@utils'
import { slide } from 'astro:transitions'

const response = await fetch(
  `${baseUrl}/api/getAnime?slug=${Astro.params.slug} `
)

if (!response.ok) {
  throw new Error(`Error fetching data: ${response.statusText}`)
}

const data = await response.json()

const anime_data: Anime | undefined = data.anime

if (!anime_data) {
  throw new Error('Anime data not found')
}

const {
  mal_id,
  title,
  image_url,
  aired_to,
  aired_from,
  duration,
  rating,
  score,
  scored_by,
  synopsis,
  type,
  genres,
  studios,
  trailer_url,
  image_webp,
  image_small_jpg,
  image_small_webp,
  image_large_jpg,
  image_large_webp,
  created_at,
  relevance_score,
  banner_image,
} = anime_data

const smallSynopsis = reduceSynopsis(synopsis)
---

<Layout>
  <section class="flex flex-col gap-8 p-4">
    <div
      class="absolute inset-0 left-0 top-0 -z-10 h-[calc(100vh-200px)] w-full overflow-hidden"
    >
      <img
        src={image_webp}
        alt={`${title}-banner`}
        loading="lazy"
        class="-my-96 aspect-[225/330] w-full opacity-85"
      />
      <div
        class="absolute inset-0 bg-[rgba(96,120,255,0.25)] backdrop-blur-[6px]"
      >
        <div
          id="more-container"
          class="absolute bottom-0 left-0 h-1/2 w-full bg-gradient-to-b from-transparent to-[#fff]/100"
        >
        </div>
      </div>
    </div>
    <article class="mt-24 flex w-full flex-row gap-20">
      <img
        src={image_large_webp}
        alt={title}
        class="aspect-[225/330] h-full w-full max-w-56 rounded-lg transition-all ease-in-out"
        transition:name={`image-transition-${mal_id}`}
        loading="lazy"
      />
      <div
        class="mt-14 flex w-full flex-col gap-4"
        transition:animate={slide({ duration: '0.4s' })}
      >
        <header class="flex max-w-2xl flex-col gap-4">
          <h2 class="text-pretty text-3xl font-bold text-gray-900">{title}</h2>
          <AnimeTag tag={getAnimeType(type)} type={getAnimeType(type)} />
        </header>

        <p class="text-sm text-gray-800">
          {smallSynopsis}
        </p>
        <footer class="mt-10 flex flex-row gap-4">
          {
            genres.map((tag: string) => (
              <AnimeTag tag={tag} type={getAnimeType(tag)} style="w-auto" />
            ))
          }
        </footer>
      </div>
    </article>

    {
      trailer_url ? (
        <youtube-video
          class="mx-auto mt-14 aspect-video w-full max-w-4xl rounded-lg"
          controls
          src={trailer_url}
        />
      ) : (
        <div class="aspect-video h-full w-full rounded-sm" />
      )
    }
  </section>
</Layout>
