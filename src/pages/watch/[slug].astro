---
import Layout from '@layouts/base.astro'
import { AnimeEpisodes } from '@components/anime-episodes'
import { baseUrl } from '@utils/base-url'
import { NextPrevEpisodeBtn } from '@components/next-prev-episode-btn'
import type { AnimeEpisode } from 'types'
import { reduceString } from '@utils/reduce-string'
import { PlayIcon } from '@components/icons/play-icon'

const episode = new URLSearchParams(Astro.url.search).get('ep') ?? '1'
const [title, mal_id] = Astro.params.slug?.split('_') ?? ['', '']

const [responseEpisodes, animeInfo] = await Promise.all([
  fetch(`${baseUrl}/api/episodes?id=${mal_id}`, { cache: 'force-cache' }).then(
    (res) => res.json()
  ),
  fetch(`${baseUrl}/api/getAnime?slug=${Astro.params.slug}`)
    .then((res) => res.json())
    .then((data) => data.anime),
])

const { image_large_webp, synopsis } = animeInfo
const description = reduceString(synopsis, 200) || 'No description available'
const episodes: AnimeEpisode[] = responseEpisodes.data

let video_url = ''
let chapterImage = ''
let episodeTitle = ''
let episodeDescription = ''
try {
  const response = await fetch(
    `${baseUrl}/api/getEpisode?slug=${Astro.params.slug}&ep=${episode}`
  )
  const data = await response.json()
  video_url = data.episode.video_url
  chapterImage = data.episode.image_url
  episodeTitle = data.episode.title
  episodeDescription = data.episode.description
} catch (error) {
  console.error('Error al obtener el video:', error)
}
---

<Layout description={description} image={chapterImage ?? image_large_webp}>
  <section
    class="xl:max-w-7x mx-auto mt-16 flex h-min w-full flex-col justify-center gap-8 overflow-hidden xl:max-h-[calc(100dvh-80px)] xl:flex-row"
    aria-label="Reproductor de episodios y lista de episodios"
  >
    <div
      class="mb-10 flex aspect-video w-full flex-col gap-3 md:relative md:mb-44 md:max-w-full xl:max-h-[calc(100dvh-80px)] xl:max-w-[60%]"
    >
      {
        video_url ? (
          <div id="video-iframe" class="relative aspect-video w-full">
            <lite-iframe
              class="rounded-lg"
              marginwidth="0"
              marginheight="0"
              src={video_url}
              frameborder="0"
              allow="fullscreen"
              sandbox="allow-same-origin allow-scripts"
              aria-label={`Video del episodio ${episode} de ${title}`}
              title={`Video del episodio ${episode} de ${title}`}
              tabindex="0"
            />
            <picture
              id="chapter-image"
              class="group absolute inset-0 z-0 flex h-full w-full cursor-pointer items-center justify-center rounded-lg transition-all duration-300 hover:saturate-[1.2]"
              style={{
                backgroundImage: `url(${chapterImage ?? image_large_webp})`,
                backgroundSize: 'cover',
                backgroundPosition: 'center',
                backgroundRepeat: 'no-repeat',
              }}
            >
              <div class="rounded-full bg-black/30 p-2 text-blue-500 transition-all duration-300 group-hover:scale-[1.1]">
                <PlayIcon width="64" height="64" />
              </div>
            </picture>
          </div>
        ) : (
          <p class="text-center text-gray-500">El video no est√° disponible.</p>
        )
      }
      <h3 class="h-auto p-4 text-xl font-bold text-white">
        {episodeTitle} - {title} - Episode {episode}
      </h3>
      <p class="font-size-sm p-2 text-gray-400">{episodeDescription}</p>
    </div>
    <div class="rounded-lg border-2 border-[#121212] bg-[#1c1c1c] p-4 xl:mt-0">
      <div
        class={`flex justify-between ${
          episode === '1' ? 'flex-row-reverse' : 'flex-row'
        }`}
      >
        <NextPrevEpisodeBtn
          client:visible
          episodesLength={episodes.length}
          currentEpisode={parseInt(episode)}
          action="Previous"
          slug={Astro.params.slug ?? ''}
        />
        <NextPrevEpisodeBtn
          client:visible
          episodesLength={episodes.length}
          currentEpisode={parseInt(episode)}
          action="Next"
          slug={Astro.params.slug ?? ''}
        />
      </div>
      <div class="relative mx-auto flex h-full xl:w-96">
        <AnimeEpisodes
          totalEpisodes={animeInfo.episodes}
          client:load
          mal_id={animeInfo.mal_id}
          slug={title}
          image_webp={image_large_webp}
          currentEpisode={parseInt(episode)}
        />
        <div
          class="absolute bottom-0 left-0 h-1/4 w-full rounded-lg bg-gradient-to-b from-transparent to-secondary"
        >
        </div>
      </div>
    </div>
  </section>
</Layout>

<script is:inline>
  function init() {
    const image = document.querySelector('#chapter-image')
    if (!image) return
    console.log(image)
    image.addEventListener('click', () => {
      image.classList.add('opacity-0')
      setTimeout(() => {
        image.classList.replace('flex', 'hidden')
      }, 300)
    })
  }

  document.addEventListener('DOMContentLoaded', init)
  document.addEventListener('astro:after-swap', init)
</script>
