---
import Layout from '@layouts/base.astro'
import AnimeEpisodes from '@components/anime-episodes.astro'
import { baseUrl } from '@utils/base-url'

import type { Anime, AnimeEpisode } from 'types'

const episode = new URLSearchParams(Astro.url.search).get('ep') ?? '1'
const [title, mal_id] = Astro.params.slug?.split('_') ?? ['', '']

const responseEpisodes = await fetch(`${baseUrl}/api/episodes?id=${mal_id}`, {
  cache: 'force-cache',
}).then((response) => response.json())
const animeInfo: Anime = await fetch(
  `${baseUrl}/api/getAnime?slug=${Astro.params.slug}`
)
  .then((response) => response.json())
  .then((data) => data.anime)

const { image_webp, synopsis } = animeInfo

const episodes: AnimeEpisode[] = responseEpisodes.episodes
let video_url = ''
try {
  const response = await fetch(
    `${baseUrl}/api/getEpisode?slug=${Astro.params.slug}&ep=${episode}`
  )
  const data = await response.json()
  video_url = data.episode.video_url
} catch (error) {
  console.error('Error al obtener el video:', error)
}
---

<Layout>
  <section
    class="xl:max-w-7x mx-auto flex h-min w-full flex-col justify-center gap-4 overflow-y-hidden xl:max-h-[calc(100dvw/2.6)] xl:flex-row"
  >
    <div
      class="aspect-video w-full p-2 md:relative md:max-w-full xl:max-h-[calc(100dvw/2.6)] xl:max-w-[68%]"
    >
      {
        video_url ? (
          <lite-iframe
            class="rounded-lg"
            id="lite-iframe"
            src={video_url}
            frameborder="0"
            allowtransparency="true"
            allowfullscreen="true"
            marginwidth="0"
            marginheight="0"
            scrolling="no"
            sambox="allow-scripts block-all"
          />
        ) : (
          <p class="text-center text-gray-500">El video no est√° disponible.</p>
        )
      }
    </div>

    <AnimeEpisodes
      episodes={episodes}
      slug={title}
      image_webp={image_webp}
      synopsis={synopsis}
      context="watch"
      currentEpisode={parseInt(episode)}
    />
  </section>
</Layout>
