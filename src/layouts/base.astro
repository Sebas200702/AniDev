---
import '@styles/global.css'
import { ClientRouter } from 'astro:transitions'
import Footer from '@components/layout/footer.astro'
import { LoadUserPrefences } from '@components/common/load-user-preferences'
import { LoadWindowWidth } from '@components/common/load-window-width'
import { ProgressBar } from '@components/common/progres-bar'
import NavBar from '@components/nav-bar/nav-bar.astro'
import { SearchBar } from '@components/search/search-bar'
import { baseTitle, baseUrl } from '@utils/base-url'
import { METADATA_CONFIGS, extractMetadata } from '@utils/get-metadata'
import { getSessionUserInfo } from '@utils/get_session_user_info'
import { AstroFont } from 'astro-font'
import '@styles/fade-out.css'

import { CustomToaster } from '@components/common/custom-toaster'

import { AsideNav } from '@components/layout/aside'
import { ModalContainer } from '@components/modal/modal-container'
import { MusicPlayer } from '@components/music-player/music-player'
const { cookies } = Astro
const accessToken = cookies.get('sb-access-token')
const refreshToken = cookies.get('sb-refresh-token')

interface Props {
  animeId?: string
  title?: string
  description?: string
  image?: string
  themeId?: string
  characterId?: string
}

const { animeId, title, description, image, themeId, characterId } = Astro.props

let metaTitle = title || `${baseTitle}`
let metaDesc =
  description ||
  'AniDev is a modern anime streaming and exploration platform. It offers dynamic experiences for discovering, searching, and enjoying top animes.'
let metaImage = image || `${baseUrl}/og-image.png`

if (animeId) {
  const metadata = await extractMetadata(
    {
      ...METADATA_CONFIGS.anime,
      value: animeId,
    },
    metaTitle,
    metaDesc,
    metaImage
  )
  metaTitle = metadata.title
  metaDesc = metadata.description
  metaImage = metadata.image
}

if (themeId) {
  const metadata = await extractMetadata(
    {
      ...METADATA_CONFIGS.music,
      value: themeId,
    },
    metaTitle,
    metaDesc,
    metaImage
  )
  metaTitle = metadata.title
  metaDesc = metadata.description
  metaImage = metadata.image
}

if (characterId) {
  const fullSlug = Astro.url.pathname.split('/').pop() || ''
  const metadata = await extractMetadata(
    {
      ...METADATA_CONFIGS.character,
      value: fullSlug,
    },
    metaTitle,
    metaDesc,
    metaImage
  )
  metaTitle = metadata.title
  metaDesc = metadata.description
  metaImage = metadata.image
}
const userInfo = await getSessionUserInfo({
  request: Astro.request,
  accessToken: accessToken?.value,
  refreshToken: refreshToken?.value,
})
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content={metaDesc} />
    <meta property="og:image" name="og:image" content={metaImage} />
    <meta property="og:title" content={metaTitle} />
    <meta property="og:description" content={metaDesc} />
    <meta property="og:type" content="website" />
    <meta name="twitter:card" content="summary" />
    <meta name="twitter:description" content={metaDesc} />
    <meta name="twitter:title" content={metaTitle} />
    <meta name="twitter:image" content={metaImage} />
    <meta name="twitter:site" content={baseUrl} />
    <meta
      http-equiv="Content-Security-Policy"
      content="
    default-src 'self';
    connect-src 'self' data: https://a.animethemes.moe https://v.animethemes.moe;
    script-src
      'self'
      'unsafe-inline'
      https://cdn.jsdelivr.net
      https://www.gstatic.com
      http://www.gstatic.com;
    frame-src 'self' https://www.youtube.com/ https://www.youtube-nocookie.com/;
    style-src 'self' 'unsafe-inline';
    media-src 'self' blob: https://a.animethemes.moe https://v.animethemes.moe;
    font-src 'self' https://fonts.googleapis.com https://fonts.gstatic.com;
    img-src
      'self'
      data:
      https://i.ytimg.com
      https://cdn.myanimelist.net
      https://coffee-advanced-tern-335.mypinata.cloud
      https://lh3.googleusercontent.com/
      https://ani-dev.vercel.app
      https://www.youtube.com/;
    worker-src 'self' blob:;
  "
    />

    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <AstroFont
      config={[
        {
          src: [],
          name: 'Nunito',
          googleFontsURL:
            'https://fonts.googleapis.com/css2?family=Nunito:wght@400;700&display=swap',
          preload: true,
          display: 'swap',
          selector: 'body',
          fallback: 'sans-serif',
        },
      ]}
    />
    <link rel="preconnect" href="https://cdn.jsdelivr.net" />
    <link rel="canonical" href={Astro.url.href} />
    <title>{metaTitle}</title>
    <ClientRouter />
  </head>
  <body>
    <div
      id="app"
      class="bg-Primary-950 text-Primary-50 no-scrollbar max-w-[100dvw] overflow-x-hidden overflow-y-scroll"
    >
      <aside class="h-16 [grid-area:aside] md:h-full">
        <AsideNav client:load />
      </aside>
      <header class="h-full [grid-area:header]">
        <NavBar />
        <ProgressBar client:load />
      </header>

      <SearchBar client:load visible={false} />
      <LoadUserPrefences userInfo={userInfo} client:load />
      <LoadWindowWidth client:load />

      <main
        id="layout-player-container"
        class="relative flex max-w-[100dvw] flex-col [grid-area:main] md:max-w-[calc(100dvw-80px)] xl:flex-row"
      >
        <MusicPlayer client:only transition:persist />
        <slot />
        <CustomToaster client:load />
      </main>
      <Footer />
      <ModalContainer client:load />
    </div>
  </body>
</html>
