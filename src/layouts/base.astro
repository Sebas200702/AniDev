---
import { ClientRouter } from 'astro:transitions'
import Footer from '@components/footer.astro'
import { LoadUserPrefences } from '@components/load-user-preferences'
import { LoadWindowWidth } from '@components/load-window-width'
import NavBar from '@components/nav-bar/nav-bar.astro'
import { ProgressBar } from '@components/progres-bar'
import { SearchBar } from '@components/search-bar'
import { Toaster } from '@pheralb/toast'
import { baseTitle, baseUrl } from '@utils/base-url'
import { getSessionUserInfo } from '@utils/get_session_user_info'
import { AstroFont } from 'astro-font'
import '@styles/global.css'
import '@styles/fade-out.css'
import '@styles/anime-banner.css'
import '@pheralb/toast/dist/styles.css'
import { AsideNav } from '@components/aside'

const { cookies } = Astro

const accessToken = cookies.get('sb-access-token')
const refreshToken = cookies.get('sb-refresh-token')

interface Props {
  animeId?: string
  title?: string
  description?: string
  image?: string
}

const { animeId, title, description, image } = Astro.props

let metaTitle = title || `${baseTitle}`
let metaDesc =
  description ||
  'AniDev is a modern anime streaming and exploration platform. It offers dynamic experiences for discovering, searching, and enjoying top animes.'
let metaImage = image || `${baseUrl}/og-image.png`

if (animeId) {
  try {
    const response = await fetch(
      `${baseUrl}/api/getAnimeMetadatas?id=${animeId}`
    )
    if (response.ok) {
      const metadata = await response.json()
      metaTitle = metadata.title
      metaDesc = metadata.description
      metaImage = metadata.image
    }
  } catch (error) {
    console.error('Error al obtener metadatos pre-renderizados:', error)
  }
}
const userInfo = await getSessionUserInfo({
  request: Astro.request,
  accessToken: accessToken?.value,
  refreshToken: refreshToken?.value,
})
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content={metaDesc} />
    <meta property="og:image" name="og:image" content={metaImage} />
    <meta property="og:title" content={metaTitle} />
    <meta property="og:description" content={metaDesc} />
    <meta property="og:type" content="website" />
    <meta name="twitter:card" content="summary" />
    <meta name="twitter:description" content={metaDesc} />
    <meta name="twitter:title" content={metaTitle} />
    <meta name="twitter:image" content={metaImage} />
    <meta name="twitter:site" content={baseUrl} />
    <meta
      http-equiv="Content-Security-Policy"
      content="
    default-src 'self';
    connect-src 'self' data:;
    script-src 'self' 'unsafe-inline';
    frame-src 'self' https://www.youtube.com/;
    style-src 'self' 'unsafe-inline';
    font-src 'self' https://fonts.googleapis.com https://fonts.gstatic.com;
    img-src 'self' data: https://i.ytimg.com https://cdn.myanimelist.net https://coffee-advanced-tern-335.mypinata.cloud https://lh3.googleusercontent.com/ https://ani-dev.vercel.app;
    worker-src  'self' blob:;
  "
    />

    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    {userInfo && <link rel="preload" href={userInfo?.avatar} as="image" />}
    <AstroFont
      config={[
        {
          src: [],
          name: 'Nunito',
          googleFontsURL:
            'https://fonts.googleapis.com/css2?family=Nunito:wght@400;700&display=swap',
          preload: true,
          display: 'swap',
          selector: 'body',
          fallback: 'sans-serif',
        },
      ]}
    />
    <link rel="preconnect" href="https://cdn.jsdelivr.net" />
    <link rel="canonical" href={baseUrl} />
    <title>{metaTitle}</title>
    <ClientRouter />
  </head>
  <body>
    <div
      id="app"
      class="bg-Primary-950 text-Primary-50 no-scrollbar max-w-[100dvw] overflow-x-hidden overflow-y-scroll"
    >
      <aside class="[grid-area:aside] md:h-full h-16">
        <AsideNav client:load />
      </aside>
      <header class="relative [grid-area:header]">
        <NavBar />
        <ProgressBar client:load />
      </header>

      <SearchBar client:load />
      <LoadUserPrefences userInfo={userInfo} client:load />
      <LoadWindowWidth client:load />

      <main
        class="relative max-w-[100dvw] [grid-area:main] md:max-w-[calc(100dvw-80px)]"
      >
        <slot />

        <Toaster
          client:load
          theme="dark"
          position="bottom-right"
          toastOptions={{
            animationOnClose: 'swipe',

            classNames: {
              toast: 'bg-Complementary ',
              container: 'bg-Complementary ',
              content: 'text-Primary-50',
              actions: {
                container: 'bg-Complementary ',
                closeBtn: 'text-Primary-50',
                actionBtn: 'text-Primary-50',
              },
            },
          }}
        />
      </main>
      <Footer />
    </div>
  </body>
</html>
<style is:global>
  #app {
    display: grid;
    grid-template-columns: 80px 1fr;
    grid-template-rows: auto 1fr auto;
    grid-template-areas:
      'aside header'
      'aside main'
      'aside footer';
    height: 100dvh;
    max-width: 100dvw;
    font-family: 'Nunito', sans-serif;
    scroll-timeline: --scrollApp;
  }

  @media (max-width: 768px) {
    #app {
      grid-template-columns: 1fr;
      grid-template-rows: auto 1fr auto auto;
      grid-template-areas:
        'header'
        'main'
        'footer'
        'aside';
    }
  }

  .navbar-animation {
    animation: enchanted-header auto both;
    animation-range: 0 300px;
    animation-timeline: --scrollApp;
  }
  @keyframes enchanted-header {
    to {
      background-color: rgba(0, 0, 0, 0.6);
      backdrop-filter: blur(8px);
    }
  }
</style>
