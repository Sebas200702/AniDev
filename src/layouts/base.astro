---
import { ClientRouter } from 'astro:transitions'
import Footer from '@components/footer.astro'
import { LoadUserPrefences } from '@components/load-user-preferences'
import { LoadWindowWidth } from '@components/load-window-width'
import NavBar from '@components/nav-bar/nav-bar.astro'
import { ProgressBar } from '@components/progres-bar'
import { SearchBar } from '@components/search-bar'
import { Toaster } from '@pheralb/toast'
import { baseTitle, baseUrl } from '@utils/base-url'
import { getSessionUserInfo } from '@utils/get_session_user_info'
import { AstroFont } from 'astro-font'
import '@styles/fade-out.css'
import '@styles/anime-banner.css'
import '@pheralb/toast/dist/styles.css'
import { AsideNav } from '@components/aside'
import { MusicPlayer } from '@components/music-player/music-player'
import SpeedInsights from '@vercel/speed-insights/astro'
import '@styles/global.css'

const { cookies } = Astro

const accessToken = cookies.get('sb-access-token')
const refreshToken = cookies.get('sb-refresh-token')

interface Props {
  animeId?: string
  title?: string
  description?: string
  image?: string
  themeId?: string
}

const { animeId, title, description, image, themeId } = Astro.props

let metaTitle = title || `${baseTitle}`
let metaDesc =
  description ||
  'AniDev is a modern anime streaming and exploration platform. It offers dynamic experiences for discovering, searching, and enjoying top animes.'
let metaImage = image || `${baseUrl}/og-image.png`

if (animeId) {
  try {
    const response = await fetch(
      `${baseUrl}/api/getAnimeMetadatas?id=${animeId}`
    )
    if (response.ok) {
      const metadata = await response.json()
      metaTitle = metadata.title
      metaDesc = metadata.description
      metaImage = metadata.image
    }
  } catch (error) {
    console.error('Error al obtener metadatos pre-renderizados:', error)
  }
}

if (themeId) {
  try {
    const response = await fetch(
      `${baseUrl}/api/getMusicInfo?themeId=${themeId}`
    )
    if (response.ok) {
      const metadata = await response.json()
      metaTitle = `${metadata[0].song_title} - ${baseTitle}` || metaTitle
      metaDesc =
        `${metadata[0].song_title} performed by ${metadata[0].artist_name}${metadata[0].anime_title ? ` for the anime ${metadata[0].anime_title}` : ''}. Listen now on AniDev!` ||
        metaDesc
      metaImage = metadata[0].image || metaImage
    }
  } catch (error) {
    console.error('Error al obtener metadatos de la canci√≥n:', error)
  }
}
const userInfo = await getSessionUserInfo({
  request: Astro.request,
  accessToken: accessToken?.value,
  refreshToken: refreshToken?.value,
})
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content={metaDesc} />
    <meta property="og:image" name="og:image" content={metaImage} />
    <meta property="og:title" content={metaTitle} />
    <meta property="og:description" content={metaDesc} />
    <meta property="og:type" content="website" />
    <meta name="twitter:card" content="summary" />
    <meta name="twitter:description" content={metaDesc} />
    <meta name="twitter:title" content={metaTitle} />
    <meta name="twitter:image" content={metaImage} />
    <meta name="twitter:site" content={baseUrl} />
    <meta
      http-equiv="Content-Security-Policy"
      content="
    default-src 'self';
    connect-src 'self' data:;
    script-src 'self' 'unsafe-inline' https://va.vercel-scripts.com/;
    frame-src 'self' https://www.youtube.com/;
    style-src 'self' 'unsafe-inline';
    media-src 'self' blob: https://a.animethemes.moe https://v.animethemes.moe;
    font-src 'self' https://fonts.googleapis.com https://fonts.gstatic.com;
    img-src 'self' data: https://i.ytimg.com https://cdn.myanimelist.net https://coffee-advanced-tern-335.mypinata.cloud https://lh3.googleusercontent.com/ https://ani-dev.vercel.app;
    worker-src  'self' blob:;
  "
    />

    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    {userInfo && <link rel="preload" href={userInfo?.avatar} as="image" />}
    <AstroFont
      config={[
        {
          src: [],
          name: 'Nunito',
          googleFontsURL:
            'https://fonts.googleapis.com/css2?family=Nunito:wght@400;700&display=swap',
          preload: true,
          display: 'swap',
          selector: 'body',
          fallback: 'sans-serif',
        },
      ]}
    />
    <link rel="preconnect" href="https://cdn.jsdelivr.net" />
    <link rel="canonical" href={baseUrl} />
    <title>{metaTitle}</title>
    <ClientRouter />
    <SpeedInsights />
  </head>
  <body>
    <div
      id="app"
      class="bg-Primary-950 text-Primary-50 no-scrollbar max-w-[100dvw] overflow-x-hidden overflow-y-scroll"
    >
      <aside class="h-16 [grid-area:aside] md:h-full">
        <AsideNav client:load />
      </aside>
      <header class="h-full [grid-area:header]">
        <NavBar />
        <ProgressBar client:load />
      </header>

      <SearchBar client:load />
      <LoadUserPrefences userInfo={userInfo} client:load />
      <LoadWindowWidth client:load />

      <main
        class="relative max-w-[100dvw] [grid-area:main] md:max-w-[calc(100dvw-80px)]"
      >
        <slot />

        <Toaster
          client:load
          theme="dark"
          position="bottom-right"
          toastOptions={{
            animationOnClose: 'swipe',

            classNames: {
              toast: 'bg-Complementary ',
              container: 'bg-Complementary ',
              content: 'text-Primary-50',
              actions: {
                container: 'bg-Complementary ',
                closeBtn: 'text-Primary-50',
                actionBtn: 'text-Primary-50',
              },
            },
          }}
        />
        <MusicPlayer client:only transition:persist />
      </main>
      <Footer />
    </div>
  </body>
</html>
<style is:inline>
  @import 'tailwindcss';

  @theme {
    --color-Primary-950: #121212;
    --color-Primary-900: #3d3d3d;
    --color-Primary-800: #454545;
    --color-Primary-700: #4f4f4f;
    --color-Primary-600: #5d5d5d;
    --color-Primary-500: #6d6d6d;
    --color-Primary-400: #888888;
    --color-Primary-300: #b0b0b0;
    --color-Primary-200: #d1d1d1;
    --color-Primary-100: #e7e7e7;
    --color-Primary-50: #f6f6f6;
    --color-Complementary: #1c1c1c;

    --color-enfasisColor: var(--enfasis-dynamic);
  }
  .dynamic-border {
    --angle: 0deg;
    position: relative;
    border: 0;
    padding: var(--border-width);
  }

  .dynamic-border::before {
    content: '';
    position: absolute;
    inset: 0;
    border-radius: inherit;
    padding: var(--border-width);
    background: var(--border-color-normal);
    -webkit-mask:
      linear-gradient(#fff 0 0) content-box,
      linear-gradient(#fff 0 0);
    -webkit-mask-composite: xor;
    mask:
      linear-gradient(#fff 0 0) content-box,
      linear-gradient(#fff 0 0);
    mask-composite: exclude;
    z-index: -1;
  }

  .dynamic-border.border-dynamic::before {
    background: conic-gradient(
      from calc(var(--angle) - 90deg),
      var(--border-color-normal) 0deg,
      var(--border-color-hover) 180deg,
      var(--border-color-normal) 360deg
    );
  }

  .button-primary {
    @apply border-enfasisColor bg-enfasisColor md:hover:border-enfasisColor/80 md:hover:text-enfasisColor cursor-pointer items-center justify-center rounded-md border-2 p-1 text-white transition-all duration-300 ease-in-out md:hover:bg-transparent md:hover:shadow-md xl:p-2;
  }
  .button-secondary {
    @apply cursor-pointer items-center justify-center rounded-md border-2 bg-transparent p-1 text-white transition-all duration-300 ease-in-out md:text-sm md:hover:opacity-50 md:hover:shadow-md xl:p-2;
  }
  .custom-scrollbar {
    @apply overflow-x-hidden overflow-y-auto scroll-smooth [&::-webkit-scrollbar]:w-1 [&::-webkit-scrollbar-thumb]:rounded-full [&::-webkit-scrollbar-thumb]:bg-zinc-700 [&::-webkit-scrollbar-track]:rounded-full [&::-webkit-scrollbar-track]:bg-transparent;
  }
  .anime-list::-webkit-scrollbar {
    display: none;
  }

  .no-scrollbar::-webkit-scrollbar {
    display: none;
  }

  .title {
    @apply text-[30px] font-bold md:text-start xl:text-[50px];
  }
  .subtitle {
    @apply text-[32px] font-bold;
  }
  .text-lxx {
    @apply text-[20px] font-bold xl:text-[28px];
  }
  .text-lx {
    @apply text-[18px] font-bold xl:text-[24px];
  }
  .text-l {
    @apply text-[16px] font-medium xl:text-[20px];
  }
  .text-m {
    @apply text-[14px] font-normal xl:text-[16px];
  }
  .text-s {
    @apply text-[12px] font-normal xl:text-[14px];
  }
  .text-sx {
    @apply text-[10px] font-normal xl:text-[12px];
  }
  .text-sxx {
    @apply text-[10px] font-light;
  }

  * {
    color-scheme: dark;
  }

  .pulse::after {
    content: ' ';
    position: absolute;
    animation: pulse-animation 2s infinite;
    inset: 0;
    z-index: 100;
    border-radius: 50%;
    width: 12px;
    height: 12px;
  }

  @keyframes pulse-animation {
    0% {
      box-shadow: 0 0 0 0px rgba(5, 223, 114, 0.3);
    }
    100% {
      box-shadow: 0 0 0 12px rgba(0, 0, 0, 0);
    }
  }
  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(-10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes slideInLeft {
    from {
      transform: translateY(-50%) translateX(-10px);
      opacity: 0;
    }
    to {
      transform: translateY(-50%) translateX(0);
      opacity: 1;
    }
  }

  .animate-fadeIn {
    animation: fadeIn 0.3s ease-out forwards;
  }

  .animate-slideInLeft {
    animation: slideInLeft 0.3s ease-out forwards;
  }

  .scrollbar-thin::-webkit-scrollbar {
    width: 4px;
  }

  .scrollbar-thumb-Primary-800::-webkit-scrollbar-thumb {
    background-color: #374151;
    border-radius: 2px;
  }

  .scrollbar-track-transparent::-webkit-scrollbar-track {
    background: transparent;
  }

  .animate-spin-slow {
    animation: spin 60s linear infinite;
  }

  .slider-minimal {
    -webkit-appearance: none;
    appearance: none;
    background: transparent;
    cursor: pointer;
    outline: none;
    height: 16px;
    width: 100%;
  }

  .slider-minimal::-webkit-slider-track {
    background: transparent;
    height: 16px;
    border-radius: 8px;
  }

  .slider-minimal::-webkit-slider-thumb {
    -webkit-appearance: none;
    appearance: none;
    height: 12px;
    width: 12px;
    border-radius: 50%;
    background: var(--color-enfasisColor);
    cursor: pointer;
    border: 2px solid rgba(255, 255, 255, 0.1);
    transition: all 0.3s ease;
    box-shadow: 0 0 0 0 rgba(var(--color-enfasisColor), 0);
    position: relative;
  }

  .slider-minimal::-webkit-slider-thumb:hover {
    transform: scale(1.2);
    border-color: rgba(255, 255, 255, 0.3);
    box-shadow: 0 0 0 4px rgba(var(--color-enfasisColor), 0.1);
  }

  .slider-minimal::-webkit-slider-thumb:active {
    transform: scale(1.3);
    border-color: rgba(255, 255, 255, 0.5);
    box-shadow: 0 0 0 6px rgba(var(--color-enfasisColor), 0.2);
  }

  .slider-minimal::-moz-range-track {
    background: transparent;
    height: 16px;
    border-radius: 8px;
    border: none;
  }

  .slider-minimal::-moz-range-thumb {
    height: 12px;
    width: 12px;
    border-radius: 50%;
    background: var(--color-enfasisColor);
    cursor: pointer;
    border: 2px solid rgba(255, 255, 255, 0.1);
    transition: all 0.3s ease;
    box-shadow: 0 0 0 0 rgba(var(--color-enfasisColor), 0);
    -moz-appearance: none;
  }

  .slider-minimal::-moz-range-thumb:hover {
    transform: scale(1.2);
    border-color: rgba(255, 255, 255, 0.3);
    box-shadow: 0 0 0 4px rgba(var(--color-enfasisColor), 0.1);
  }

  .slider-minimal::-moz-range-thumb:active {
    transform: scale(1.3);
    border-color: rgba(255, 255, 255, 0.5);
    box-shadow: 0 0 0 6px rgba(var(--color-enfasisColor), 0.2);
  }

  /* Focus styles for accessibility */
  .slider-minimal:focus::-webkit-slider-thumb {
    box-shadow: 0 0 0 4px rgba(var(--color-enfasisColor), 0.3);
  }

  .slider-minimal:focus::-moz-range-thumb {
    box-shadow: 0 0 0 4px rgba(var(--color-enfasisColor), 0.3);
  }

  /* Dragging states */
  .dragging-active {
    cursor: grabbing !important;
  }

  .dragging-active::-webkit-slider-thumb {
    transform: scale(1.4) !important;
    border-color: rgba(255, 255, 255, 0.8) !important;
    box-shadow: 0 0 0 8px rgba(var(--color-enfasisColor), 0.2) !important;
  }

  .dragging-active::-moz-range-thumb {
    transform: scale(1.4) !important;
    border-color: rgba(255, 255, 255, 0.8) !important;
    box-shadow: 0 0 0 8px rgba(var(--color-enfasisColor), 0.2) !important;
  }

  .dragging .slider-minimal {
    cursor: grabbing;
  }

  /* Visual feedback during dragging */
  .dragging {
    opacity: 0.95;
  }

  /* Drag preview line */
  .drag-preview {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    width: 2px;
    height: 12px;
    background: rgba(255, 255, 255, 0.6);
    border-radius: 1px;
    pointer-events: none;
    opacity: 0;
    transition: opacity 0.2s ease;
  }

  .dragging .drag-preview {
    opacity: 1;
  }

  /* Responsive design improvements for music player */
  @media (max-width: 480px) {
    .music-player {
      max-width: 95vw;
      bottom: 20px;
      right: 2.5vw;
    }

    .music-controls {
      padding: 12px;
    }

    .cover-container {
      width: 160px;
      height: 160px;
    }
  }

  /* Music Player Dragging Styles */
  .music-player-dragging {
    transition: none !important;
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3) !important;
    z-index: 9999 !important;
  }

  .music-player-dragging * {
    pointer-events: none !important;
  }

  .music-player-dragging .controls-area {
    opacity: 0.8;
  }

  /* Smooth transitions when not dragging */
  .music-player:not(.music-player-dragging) {
    transition:
      bottom 0.3s ease,
      right 0.3s ease,
      transform 0.2s ease;
  }

  /* Prevent text selection during drag */
  .music-player-dragging,
  .music-player-dragging * {
    user-select: none !important;
    -webkit-user-select: none !important;
    -moz-user-select: none !important;
    -ms-user-select: none !important;
  }

  .disk {
    /* Brillo superior izquierdo */
    background-image:
      radial-gradient(
        ellipse 40% 20% at 30% 25%,
        rgba(255, 255, 255, 0.15) 0%,
        transparent 50%
      ),
      /* Reflejo central */
        radial-gradient(
          ellipse 60% 30% at 50% 45%,
          rgba(255, 255, 255, 0.08) 0%,
          transparent 60%
        ),
      /* Surcos conc√©ntricos m√°s visibles */
        repeating-radial-gradient(
          circle at center,
          transparent 0px,
          transparent 6px,
          rgba(0, 0, 0, 0.25) 6px,
          rgba(0, 0, 0, 0.25) 7px,
          transparent 7px,
          transparent 13px
        ),
      /* Surcos adicionales m√°s finos */
        repeating-radial-gradient(
          circle at center,
          transparent 0px,
          transparent 3px,
          rgba(0, 0, 0, 0.15) 3px,
          rgba(0, 0, 0, 0.15) 3.5px,
          transparent 3.5px,
          transparent 6.5px
        ),
      /* Gradiente base del vinilo */
        radial-gradient(
          circle at center,
          #1a1a1a 0%,
          #2a2a2a 30%,
          #1f1f1f 60%,
          #151515 80%,
          #0f0f0f 100%
        );
    /* Sombra interna para profundidad */
    box-shadow:
      inset 0 0 0 1px rgba(255, 255, 255, 0.1),
      inset 0 2px 4px rgba(0, 0, 0, 0.3),
      inset 0 -2px 4px rgba(255, 255, 255, 0.05),
      /* Sombra externa */ 0 4px 12px rgba(0, 0, 0, 0.4);
    position: relative;
  }

  .disk::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    border-radius: 50%;
    /* Efecto de rayado radial sutil */
    background: conic-gradient(
      from 0deg,
      transparent 0deg,
      rgba(255, 255, 255, 0.02) 1deg,
      transparent 2deg,
      rgba(255, 255, 255, 0.02) 3deg,
      transparent 4deg
    );
    pointer-events: none;
  }

  .disk::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    border-radius: 50%;
    /* Brillo din√°mico superior */
    background: linear-gradient(
      135deg,
      rgba(255, 255, 255, 0.12) 0%,
      rgba(255, 255, 255, 0.06) 25%,
      transparent 50%,
      rgba(255, 255, 255, 0.02) 75%,
      transparent 100%
    );
    pointer-events: none;
  }

  #app {
    display: grid;
    grid-template-columns: 80px 1fr;
    grid-template-rows: auto 1fr auto;
    grid-template-areas:
      'aside header'
      'aside main'
      'aside footer';
    height: 100dvh;
    max-width: 100dvw;
    font-family: 'Nunito', sans-serif;
    scroll-timeline: --scrollApp;
  }

  @media (max-width: 768px) {
    #app {
      grid-template-columns: 1fr;
      grid-template-rows: auto 1fr auto auto;
      grid-template-areas:
        'header'
        'main'
        'footer'
        'aside';
    }
  }

  .navbar-animation {
    animation: enchanted-header auto both;
    animation-range: 0 300px;
    animation-timeline: --scrollApp;
  }
  @keyframes enchanted-header {
    to {
      background-color: rgba(0, 0, 0, 0.6);
      backdrop-filter: blur(8px);
    }
  }
</style>
